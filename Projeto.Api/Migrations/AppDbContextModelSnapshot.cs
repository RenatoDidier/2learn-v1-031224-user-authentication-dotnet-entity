// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Projeto.Repository.Data;

#nullable disable

namespace Projeto.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Projeto.Core.Context.UsuarioContext.Models.Credencial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("Titulo");

                    b.HasKey("Id");

                    b.HasIndex(new[] { "Titulo" }, "IX_Credencial_Titulo")
                        .IsUnique();

                    b.ToTable("Credencial", (string)null);
                });

            modelBuilder.Entity("Projeto.Core.Context.UsuarioContext.Models.Usuario", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(8)
                        .HasColumnType("VARCHAR")
                        .HasColumnName("Id");

                    b.HasKey("Id");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("UsuarioCredencial", b =>
                {
                    b.Property<int>("CredencialId")
                        .HasColumnType("int");

                    b.Property<string>("UsuarioId")
                        .HasColumnType("VARCHAR(8)");

                    b.HasKey("CredencialId", "UsuarioId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("UsuarioCredencial");
                });

            modelBuilder.Entity("Projeto.Core.Context.UsuarioContext.Models.Usuario", b =>
                {
                    b.OwnsOne("Projeto.Core.Context.UsuarioContext.ValueObjects.Email", "Email", b1 =>
                        {
                            b1.Property<string>("UsuarioId")
                                .HasColumnType("VARCHAR(8)");

                            b1.Property<string>("Endereco")
                                .IsRequired()
                                .HasMaxLength(120)
                                .HasColumnType("NVARCHAR")
                                .HasColumnName("Endereco");

                            b1.HasKey("UsuarioId");

                            b1.HasIndex("Endereco")
                                .IsUnique();

                            b1.ToTable("Usuario");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");

                            b1.OwnsOne("Projeto.Core.Context.UsuarioContext.ValueObjects.Validacao", "Validacao", b2 =>
                                {
                                    b2.Property<string>("EmailUsuarioId")
                                        .HasColumnType("VARCHAR(8)");

                                    b2.Property<string>("Codigo")
                                        .IsRequired()
                                        .HasMaxLength(6)
                                        .HasColumnType("VARCHAR")
                                        .HasColumnName("Codigo");

                                    b2.Property<DateTime>("LimiteValidacao")
                                        .HasColumnType("SMALLDATETIME")
                                        .HasColumnName("LimiteValidacao");

                                    b2.Property<DateTime?>("ValidacaoRealizada")
                                        .HasColumnType("SMALLDATETIME")
                                        .HasColumnName("ValidacaoRealizada");

                                    b2.HasKey("EmailUsuarioId");

                                    b2.ToTable("Usuario");

                                    b2.WithOwner()
                                        .HasForeignKey("EmailUsuarioId");
                                });

                            b1.Navigation("Validacao")
                                .IsRequired();
                        });

                    b.OwnsOne("Projeto.Core.Context.UsuarioContext.ValueObjects.Nome", "Nome", b1 =>
                        {
                            b1.Property<string>("UsuarioId")
                                .HasColumnType("VARCHAR(8)");

                            b1.Property<string>("PrimeiroNome")
                                .IsRequired()
                                .HasMaxLength(80)
                                .HasColumnType("NVARCHAR")
                                .HasColumnName("PrimeiroNome");

                            b1.Property<string>("UltimoSobrenome")
                                .IsRequired()
                                .HasMaxLength(80)
                                .HasColumnType("NVARCHAR")
                                .HasColumnName("UltimoSobrenome");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuario");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.OwnsOne("Projeto.Core.Context.UsuarioContext.ValueObjects.Senha", "Senha", b1 =>
                        {
                            b1.Property<string>("UsuarioId")
                                .HasColumnType("VARCHAR(8)");

                            b1.Property<string>("HashSenha")
                                .IsRequired()
                                .HasMaxLength(120)
                                .HasColumnType("NVARCHAR")
                                .HasColumnName("HashSenha");

                            b1.HasKey("UsuarioId");

                            b1.ToTable("Usuario");

                            b1.WithOwner()
                                .HasForeignKey("UsuarioId");
                        });

                    b.Navigation("Email")
                        .IsRequired();

                    b.Navigation("Nome")
                        .IsRequired();

                    b.Navigation("Senha")
                        .IsRequired();
                });

            modelBuilder.Entity("UsuarioCredencial", b =>
                {
                    b.HasOne("Projeto.Core.Context.UsuarioContext.Models.Credencial", null)
                        .WithMany()
                        .HasForeignKey("CredencialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_UsuarioCredencial_CredencialId");

                    b.HasOne("Projeto.Core.Context.UsuarioContext.Models.Usuario", null)
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_UsuarioCredencial_UsuarioId");
                });
#pragma warning restore 612, 618
        }
    }
}
